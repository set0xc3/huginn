package main
import sg "huginn:vendor/sokol/gfx"
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i huginn/sandbox/ui/shader.glsl -o huginn/sandbox/ui/shader.odin -l glsl430 -f sokol_odin

    Overview:
    =========
    Shader program: 'quad':
        Get shader desc: quad_shader_desc(sg.query_backend())
        Vertex Shader: vs
        Fragment Shader: fs
        Attributes:
            ATTR_quad_position0 => 0
            ATTR_quad_color0 => 1
    Bindings:
        Uniform block 'vs_params':
            Odin struct: Vs_Params
            Bind slot: UB_vs_params => 0
*/
ATTR_quad_position0 :: 0
ATTR_quad_color0 :: 1
UB_vs_params :: 0
Vs_Params :: struct #align(16) {
    using _: struct #packed {
        position: [2]f32,
        size: [2]f32,
    },
}
/*
    #version 430

    uniform vec4 vs_params[1];
    layout(location = 0) in vec4 position0;
    layout(location = 0) out vec4 color;
    layout(location = 1) in vec4 color0;
    layout(location = 1) out vec2 u_position;
    layout(location = 2) out vec2 u_size;

    void main()
    {
        gl_Position = position0;
        color = color0;
        u_position = vs_params[0].xy;
        u_size = vs_params[0].zw;
    }

*/
@(private="file")
vs_source_glsl430 := [367]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x30,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x5f,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x32,0x20,0x75,0x5f,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x75,0x5f,0x73,0x69,0x7a,0x65,0x20,0x3d,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x7a,0x77,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
}
/*
    #version 430

    layout(location = 2) in vec2 u_size;
    layout(location = 1) in vec2 u_position;
    layout(location = 0) out vec4 frag_color;
    layout(location = 0) in vec4 color;
    vec2 u_rectSize;
    vec4 u_cornerRadii;
    float u_borderThickness;
    float u_borderSoftness;
    float u_edgeSoftness;
    vec4 u_colorBg;
    vec4 u_colorRect;
    vec4 u_colorBorder;

    float sdf_rect_rounded(vec2 p, vec2 b, inout vec4 r)
    {
        vec2 _52;
        if (p.x > 0.0)
        {
            _52 = r.xy;
        }
        else
        {
            _52 = r.zw;
        }
        r.x = _52.x;
        r.y = _52.y;
        float _69;
        if (p.y > 0.0)
        {
            _69 = r.x;
        }
        else
        {
            _69 = r.y;
        }
        r.x = _69;
        vec2 _87 = (abs(p) - b) + vec2(r.x);
        return (min(max(_87.x, _87.y), 0.0) + length(max(_87, vec2(0.0)))) - r.x;
    }

    void main()
    {
        u_rectSize = u_size;
        u_cornerRadii = vec4(10.0);
        u_borderThickness = 1.0;
        u_borderSoftness = 0.5;
        u_edgeSoftness = 0.5;
        u_colorBg = vec4(0.941176474094390869140625, 0.94509804248809814453125, 0.949019610881805419921875, 1.0);
        u_colorRect = vec4(1.0);
        u_colorBorder = vec4(0.80392158031463623046875, 0.823529422283172607421875, 0.839215695858001708984375, 1.0);
        vec2 param = (gl_FragCoord.xy - u_rectSize) - u_position;
        vec2 param_1 = u_rectSize;
        vec4 param_2 = u_cornerRadii;
        float _122 = sdf_rect_rounded(param, param_1, param_2);
        float _127 = fwidth(_122) * u_edgeSoftness;
        float _134 = 1.0 - smoothstep(-_127, _127, _122);
        float _148 = abs(_122) - u_borderThickness;
        float _155 = fwidth(_148) * u_borderSoftness;
        float _162 = 1.0 - smoothstep(-_155, _155, _148);
        frag_color = mix(mix(u_colorBg, vec4(u_colorRect.xyz, _134), vec4(_134)), vec4(u_colorBorder.xyz, _162 * _134), vec4(_162));
    }

*/
@(private="file")
fs_source_glsl430 := [1751]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x5f,0x73,0x69,0x7a,
    0x65,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,
    0x75,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x76,0x65,0x63,0x32,0x20,0x75,
    0x5f,0x72,0x65,0x63,0x74,0x53,0x69,0x7a,0x65,0x3b,0x0a,0x76,0x65,0x63,0x34,0x20,
    0x75,0x5f,0x63,0x6f,0x72,0x6e,0x65,0x72,0x52,0x61,0x64,0x69,0x69,0x3b,0x0a,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x75,0x5f,0x62,0x6f,0x72,0x64,0x65,0x72,0x54,0x68,0x69,
    0x63,0x6b,0x6e,0x65,0x73,0x73,0x3b,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x75,0x5f,
    0x62,0x6f,0x72,0x64,0x65,0x72,0x53,0x6f,0x66,0x74,0x6e,0x65,0x73,0x73,0x3b,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x75,0x5f,0x65,0x64,0x67,0x65,0x53,0x6f,0x66,0x74,
    0x6e,0x65,0x73,0x73,0x3b,0x0a,0x76,0x65,0x63,0x34,0x20,0x75,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x42,0x67,0x3b,0x0a,0x76,0x65,0x63,0x34,0x20,0x75,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x52,0x65,0x63,0x74,0x3b,0x0a,0x76,0x65,0x63,0x34,0x20,0x75,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x42,0x6f,0x72,0x64,0x65,0x72,0x3b,0x0a,0x0a,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x73,0x64,0x66,0x5f,0x72,0x65,0x63,0x74,0x5f,0x72,0x6f,0x75,0x6e,
    0x64,0x65,0x64,0x28,0x76,0x65,0x63,0x32,0x20,0x70,0x2c,0x20,0x76,0x65,0x63,0x32,
    0x20,0x62,0x2c,0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x72,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x35,0x32,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x70,0x2e,0x78,0x20,0x3e,0x20,
    0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x5f,0x35,0x32,0x20,0x3d,0x20,0x72,0x2e,0x78,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x35,0x32,0x20,
    0x3d,0x20,0x72,0x2e,0x7a,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x35,0x32,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x35,0x32,0x2e,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x36,0x39,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x70,0x2e,0x79,0x20,0x3e,0x20,0x30,0x2e,0x30,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x36,0x39,0x20,0x3d,0x20,0x72,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x36,0x39,0x20,0x3d,0x20,0x72,0x2e,
    0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x2e,0x78,
    0x20,0x3d,0x20,0x5f,0x36,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,
    0x20,0x5f,0x38,0x37,0x20,0x3d,0x20,0x28,0x61,0x62,0x73,0x28,0x70,0x29,0x20,0x2d,
    0x20,0x62,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x72,0x2e,0x78,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x6d,0x69,0x6e,
    0x28,0x6d,0x61,0x78,0x28,0x5f,0x38,0x37,0x2e,0x78,0x2c,0x20,0x5f,0x38,0x37,0x2e,
    0x79,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x20,0x2b,0x20,0x6c,0x65,0x6e,0x67,0x74,
    0x68,0x28,0x6d,0x61,0x78,0x28,0x5f,0x38,0x37,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,
    0x30,0x2e,0x30,0x29,0x29,0x29,0x29,0x20,0x2d,0x20,0x72,0x2e,0x78,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x75,0x5f,0x72,0x65,0x63,0x74,0x53,0x69,0x7a,0x65,0x20,0x3d,
    0x20,0x75,0x5f,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x5f,0x63,
    0x6f,0x72,0x6e,0x65,0x72,0x52,0x61,0x64,0x69,0x69,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x34,0x28,0x31,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x5f,0x62,
    0x6f,0x72,0x64,0x65,0x72,0x54,0x68,0x69,0x63,0x6b,0x6e,0x65,0x73,0x73,0x20,0x3d,
    0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x5f,0x62,0x6f,0x72,0x64,
    0x65,0x72,0x53,0x6f,0x66,0x74,0x6e,0x65,0x73,0x73,0x20,0x3d,0x20,0x30,0x2e,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x5f,0x65,0x64,0x67,0x65,0x53,0x6f,0x66,0x74,
    0x6e,0x65,0x73,0x73,0x20,0x3d,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x75,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x42,0x67,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x30,0x2e,0x39,0x34,0x31,0x31,0x37,0x36,0x34,0x37,0x34,0x30,0x39,0x34,0x33,
    0x39,0x30,0x38,0x36,0x39,0x31,0x34,0x30,0x36,0x32,0x35,0x2c,0x20,0x30,0x2e,0x39,
    0x34,0x35,0x30,0x39,0x38,0x30,0x34,0x32,0x34,0x38,0x38,0x30,0x39,0x38,0x31,0x34,
    0x34,0x35,0x33,0x31,0x32,0x35,0x2c,0x20,0x30,0x2e,0x39,0x34,0x39,0x30,0x31,0x39,
    0x36,0x31,0x30,0x38,0x38,0x31,0x38,0x30,0x35,0x34,0x31,0x39,0x39,0x32,0x31,0x38,
    0x37,0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x52,0x65,0x63,0x74,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x42,0x6f,0x72,0x64,0x65,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x30,0x2e,0x38,0x30,0x33,0x39,0x32,0x31,0x35,0x38,0x30,0x33,0x31,0x34,0x36,0x33,
    0x36,0x32,0x33,0x30,0x34,0x36,0x38,0x37,0x35,0x2c,0x20,0x30,0x2e,0x38,0x32,0x33,
    0x35,0x32,0x39,0x34,0x32,0x32,0x32,0x38,0x33,0x31,0x37,0x32,0x36,0x30,0x37,0x34,
    0x32,0x31,0x38,0x37,0x35,0x2c,0x20,0x30,0x2e,0x38,0x33,0x39,0x32,0x31,0x35,0x36,
    0x39,0x35,0x38,0x35,0x38,0x30,0x30,0x31,0x37,0x30,0x38,0x39,0x38,0x34,0x33,0x37,
    0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x28,0x67,0x6c,0x5f,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x79,0x20,0x2d,0x20,0x75,0x5f,0x72,
    0x65,0x63,0x74,0x53,0x69,0x7a,0x65,0x29,0x20,0x2d,0x20,0x75,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x75,0x5f,0x72,0x65,0x63,0x74,
    0x53,0x69,0x7a,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x75,0x5f,0x63,0x6f,0x72,0x6e,0x65,
    0x72,0x52,0x61,0x64,0x69,0x69,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x32,0x32,0x20,0x3d,0x20,0x73,0x64,0x66,0x5f,0x72,0x65,0x63,
    0x74,0x5f,0x72,0x6f,0x75,0x6e,0x64,0x65,0x64,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x32,0x37,0x20,0x3d,0x20,0x66,0x77,0x69,0x64,0x74,0x68,0x28,0x5f,0x31,0x32,0x32,
    0x29,0x20,0x2a,0x20,0x75,0x5f,0x65,0x64,0x67,0x65,0x53,0x6f,0x66,0x74,0x6e,0x65,
    0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x33,0x34,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x73,0x6d,0x6f,0x6f,0x74,
    0x68,0x73,0x74,0x65,0x70,0x28,0x2d,0x5f,0x31,0x32,0x37,0x2c,0x20,0x5f,0x31,0x32,
    0x37,0x2c,0x20,0x5f,0x31,0x32,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x38,0x20,0x3d,0x20,0x61,0x62,0x73,0x28,0x5f,
    0x31,0x32,0x32,0x29,0x20,0x2d,0x20,0x75,0x5f,0x62,0x6f,0x72,0x64,0x65,0x72,0x54,
    0x68,0x69,0x63,0x6b,0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x35,0x35,0x20,0x3d,0x20,0x66,0x77,0x69,0x64,0x74,
    0x68,0x28,0x5f,0x31,0x34,0x38,0x29,0x20,0x2a,0x20,0x75,0x5f,0x62,0x6f,0x72,0x64,
    0x65,0x72,0x53,0x6f,0x66,0x74,0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x36,0x32,0x20,0x3d,0x20,0x31,0x2e,0x30,
    0x20,0x2d,0x20,0x73,0x6d,0x6f,0x6f,0x74,0x68,0x73,0x74,0x65,0x70,0x28,0x2d,0x5f,
    0x31,0x35,0x35,0x2c,0x20,0x5f,0x31,0x35,0x35,0x2c,0x20,0x5f,0x31,0x34,0x38,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x6d,0x69,0x78,0x28,0x75,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x42,0x67,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x75,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x52,0x65,0x63,0x74,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x31,0x33,0x34,
    0x29,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x33,0x34,0x29,0x29,0x2c,0x20,
    0x76,0x65,0x63,0x34,0x28,0x75,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x42,0x6f,0x72,0x64,
    0x65,0x72,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x31,0x36,0x32,0x20,0x2a,0x20,0x5f,
    0x31,0x33,0x34,0x29,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x36,0x32,0x29,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
}
quad_shader_desc :: proc (backend: sg.Backend) -> sg.Shader_Desc {
    desc: sg.Shader_Desc
    desc.label = "quad_shader"
    #partial switch backend {
    case .GLCORE:
        desc.vertex_func.source = transmute(cstring)&vs_source_glsl430
        desc.vertex_func.entry = "main"
        desc.fragment_func.source = transmute(cstring)&fs_source_glsl430
        desc.fragment_func.entry = "main"
        desc.attrs[0].glsl_name = "position0"
        desc.attrs[1].glsl_name = "color0"
        desc.uniform_blocks[0].stage = .VERTEX
        desc.uniform_blocks[0].layout = .STD140
        desc.uniform_blocks[0].size = 16
        desc.uniform_blocks[0].glsl_uniforms[0].type = .FLOAT4
        desc.uniform_blocks[0].glsl_uniforms[0].array_count = 1
        desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params"
    }
    return desc
}
